// Code generated by https://github.com/feihua/code_cli
// author：刘飞华
// createTime：2024/12/25 10:01:11

use crate::vo::system::sys_post_vo::PostReq;
use crate::vo::system::sys_post_vo::PostResp;
use crate::vo::system::sys_post_vo::QueryPostListReq;
use rbatis::rbdc::datetime::DateTime;
use serde::{Deserialize, Serialize};
/*
 *岗位信息
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct Post {
    pub id: Option<i64>,               //岗位id
    pub post_code: String,             //岗位编码
    pub post_name: String,             //岗位名称
    pub sort: i32,                     //显示顺序
    pub status: i8,                    //部状态（0：停用，1:正常）
    pub remark: Option<String>,        //备注
    pub create_time: Option<DateTime>, //创建时间
    pub update_time: Option<DateTime>, //更新时间
}

/*
 *岗位信息基本操作
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
rbatis::crud!(Post {}, "sys_post");
impl From<PostReq> for Post {
    fn from(item: PostReq) -> Self {
        let mut model = Post {
            id: item.id,               //岗位id
            post_code: item.post_code, //岗位编码
            post_name: item.post_name, //岗位名称
            sort: item.sort,           //显示顺序
            status: item.status,       //部状态（0：停用，1:正常）
            remark: item.remark,       //备注
            create_time: None,         //创建时间
            update_time: None,         //更新时间
        };
        if let None = item.id {
            model.create_time = Some(DateTime::now());
        } else {
            model.update_time = Some(DateTime::now());
        }
        model
    }
}

impl Into<PostResp> for Post {
    fn into(self) -> PostResp {
        PostResp {
            id: self.id,                   //岗位id
            post_code: self.post_code,     //岗位编码
            post_name: self.post_name,     //岗位名称
            sort: self.sort,               //显示顺序
            status: self.status,           //部状态（0：停用，1:正常）
            remark: self.remark,           //备注
            create_time: self.create_time, //创建时间
            update_time: self.update_time, //更新时间
        }
    }
}
/*
 *根据id查询岗位信息
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
impl_select!(Post{select_by_id(id:&i64) -> Option => "`where id = #{id} limit 1`"}, "sys_post");

/*
 *根据post_code查询岗位信息
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
impl_select!(Post{select_by_code(post_code:&str, id:Option<i64>) -> Option => "
    `where post_code = #{post_code} `
     if id != null:
      ` and id != #{id} `
    limit 1"
}, "sys_post");

/*
 *根据post_name查询岗位信息
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
impl_select!(Post{select_by_name(post_name:&str, id:Option<i64>) -> Option => "
    `where post_name = #{post_name} `
     if id != null:
      ` and id != #{id} `
     limit 1"
}, "sys_post");

/*
 *分页查询岗位信息
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
impl_select_page!(Post{select_page() =>"
     if !sql.contains('count'):
       order by create_time desc"
},"sys_post");

/*
 *根据条件分页查询岗位信息
 *author：刘飞华
 *date：2024/12/25 10:01:11
 */
impl_select_page!(Post{select_post_list(req:&QueryPostListReq) =>"
    where 1=1
     if req.postCode != null && req.postCode != '':
      ` and post_code like concat('%', #{req.postCode}, '%') `
     if req.postName != null &&req. postName != '':
      ` and post_name like concat('%', #{req.postName}, '%') `
     if req.status != 2:
      ` and status = #{req.status} `
     if !sql.contains('count'):
      ` order by create_time desc"
},"sys_post");
