// Code generated by https://github.com/feihua/code_cli
// author：刘飞华
// date：2025/01/08 13:51:14

use crate::common::error::{AppError, AppResult};
use crate::common::result::{ok_result, ok_result_data, ok_result_page};
use crate::model::system::sys_operate_log_model::OperateLog;
use crate::vo::system::sys_operate_log_vo::*;
use crate::RB;
use rbatis::PageRequest;
use rbs::value;
use salvo::prelude::*;
use salvo::{Request, Response};
/*
 *删除操作日志记录
 *author：刘飞华
 *date：2025/01/08 13:51:14
 */
#[handler]
pub async fn delete_sys_operate_log(req: &mut Request, res: &mut Response) -> AppResult {
    let item = req.parse_json::<DeleteOperateLogReq>().await?;
    log::info!("delete sys_operate_log params: {:?}", &item);

    let rb = &mut RB.clone();

    OperateLog::delete_by_map(rb, value! {"id": &item.ids}).await.map(|_| ok_result(res))?
}

/*
 *查询操作日志记录详情
 *author：刘飞华
 *date：2025/01/08 13:51:14
 */
#[handler]
pub async fn query_sys_operate_log_detail(req: &mut Request, res: &mut Response) -> AppResult {
    let item = req.parse_json::<QueryOperateLogDetailReq>().await?;

    log::info!("query sys_operate_log_detail params: {:?}", &item);

    OperateLog::select_by_id(&mut RB.clone(), &item.id).await?.map_or_else(
        || Err(AppError::BusinessError("操作日志不存在")),
        |x| {
            let data: OperateLogResp = x.into();
            ok_result_data(res, data)
        },
    )
}

/*
 *查询操作日志记录列表
 *author：刘飞华
 *date：2025/01/08 13:51:14
 */
#[handler]
pub async fn query_sys_operate_log_list(req: &mut Request, res: &mut Response) -> AppResult {
    let req = req.parse_json::<QueryOperateLogListReq>().await?;
    log::info!("query sys_operate_log_list params: {:?}", &req);

    let rb = &mut RB.clone();
    let item = &req;

    OperateLog::select_page_by_name(rb, &PageRequest::from(item), item)
        .await
        .map(|x| ok_result_page(res, x.records.into_iter().map(|x| x.into()).collect::<Vec<OperateLogResp>>(), x.total))?
}
